import{d as s,o as a,c as t,a as p}from"./@vue.ca4ffc67.js";const o={class:"markdown-body"},e=p(`<h2>\u5B89\u88C5</h2><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">shell</span></div><div class="code-block language-shell no-line-numbers" data-lang="shell" data-modifiers=""><pre class="language-shell" data-lang="shell"><code class="code-line odd first-row line-1"><span class="token function">npm</span> i crypto-js</code></pre></div></div><h2>\u4F7F\u7528</h2><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">const</span> CryptoJS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;crypto-js&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3"><span class="token comment">// \u7528\u4E8E\u751F\u6210 key \u548C iv</span></code>
<code class="code-line even line-4"><span class="token keyword">function</span> <span class="token function">randomHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-5">  <span class="token keyword">const</span> <span class="token function-variable function">randomUnit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;0123456789abcdef&quot;</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line even line-6">  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">randomUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-7"><span class="token punctuation">}</span></code>
<code class="code-line even line-8"></code>
<code class="code-line odd line-9"><span class="token keyword">function</span> <span class="token function">Decrypt</span><span class="token punctuation">(</span><span class="token parameter">word<span class="token punctuation">,</span> key<span class="token punctuation">,</span> iv</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-10">  key <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></code>
<code class="code-line odd line-11">  iv <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>iv<span class="token punctuation">)</span></code>
<code class="code-line even line-12">  <span class="token keyword">let</span> encryptedHexStr <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Hex<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span></code>
<code class="code-line odd line-13">  <span class="token keyword">let</span> srcs <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>encryptedHexStr<span class="token punctuation">)</span></code>
<code class="code-line even line-14">  <span class="token keyword">let</span> decrypt <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>srcs<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> iv<span class="token punctuation">,</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7 <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-15">  <span class="token keyword">let</span> decryptedStr <span class="token operator">=</span> decrypt<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span></code>
<code class="code-line even line-16">  <span class="token keyword">return</span> decryptedStr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-17"><span class="token punctuation">}</span></code>
<code class="code-line even line-18"></code>
<code class="code-line odd line-19"><span class="token keyword">function</span> <span class="token function">Encrypt</span><span class="token punctuation">(</span><span class="token parameter">word<span class="token punctuation">,</span> key<span class="token punctuation">,</span> iv</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-20">  key <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></code>
<code class="code-line odd line-21">  iv <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>iv<span class="token punctuation">)</span></code>
<code class="code-line even line-22">  <span class="token keyword">let</span> srcs <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span></code>
<code class="code-line odd line-23">  <span class="token keyword">let</span> encrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>srcs<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> iv<span class="token punctuation">,</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7 <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-24">  <span class="token keyword">return</span> encrypted<span class="token punctuation">.</span>ciphertext<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd last-row line-25"><span class="token punctuation">}</span></code></pre></div></div>`,4),c=[e],r={title:null,tags:["crypto-js","\u52A0\u5BC6|\u89E3\u5BC6"],categories:null,description:"\u5F53\u6570\u636E\u9700\u8981\u52A0\u5BC6\u540E\u4FDD\u5B58\u5230\u6587\u5E1D\u6587\u4EF6\u4E2D\u65F6\uFF0C\u53EF\u4EE5\u7528\u5230\u5B83",publishTime:"2022-08-23T17:36:30.000Z",updateTime:null,img:null,toc:!1,comment:!0},d="",y=s({__name:"index",setup(u,{expose:n}){return n({frontmatter:{title:null,tags:["crypto-js","\u52A0\u5BC6|\u89E3\u5BC6"],categories:null,description:"\u5F53\u6570\u636E\u9700\u8981\u52A0\u5BC6\u540E\u4FDD\u5B58\u5230\u6587\u5E1D\u6587\u4EF6\u4E2D\u65F6\uFF0C\u53EF\u4EE5\u7528\u5230\u5B83",publishTime:"2022-08-23T17:36:30.000Z",updateTime:null,img:null,toc:!1,comment:!0},excerpt:void 0}),(l,i)=>(a(),t("div",o,c))}});export{y as default,d as excerpt,r as frontmatter};
