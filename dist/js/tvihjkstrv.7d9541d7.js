import{d as s,o as a,c as e,a as o}from"./@vue.b664db41.js";const u={class:"markdown-body"},c=o(`<h1>Promise</h1><p><code>Promise</code> \u5BF9\u8C61\u7528\u4E8E\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u6700\u7EC8\u5B8C\u6210\uFF08\u6216\u5931\u8D25\uFF09\u53CA\u5176\u7ED3\u679C\u503C</p><p>\u4E00\u4E2A Promise \u5BF9\u8C61\u4EE3\u8868\u4E00\u4E2A\u5728\u8FD9\u4E2A promise \u88AB\u521B\u5EFA\u51FA\u6765\u65F6\u4E0D\u4E00\u5B9A\u5DF2\u77E5\u503C\u7684\u4EE3\u7406\u3002\u5B83\u8BA9\u4F60\u80FD\u591F\u628A\u5F02\u6B65\u64CD\u4F5C\u6700\u7EC8\u7684\u6210\u529F\u8FD4\u56DE\u503C\u6216\u8005\u5931\u8D25\u539F\u56E0\u548C\u76F8\u5E94\u7684\u5904\u7406\u7A0B\u5E8F\u5173\u8054\u8D77\u6765\u3002\u8FD9\u6837\u4F7F\u5F97\u5F02\u6B65\u65B9\u6CD5\u53EF\u4EE5\u50CF\u540C\u6B65\u65B9\u6CD5\u90A3\u6837\u8FD4\u56DE\u503C\uFF1A\u5F02\u6B65\u65B9\u6CD5\u5E76\u4E0D\u4F1A\u7ACB\u5373\u8FD4\u56DE\u6700\u7EC8\u7684\u503C\uFF0C\u800C\u662F\u4F1A\u8FD4\u56DE\u4E00\u4E2A promise\uFF0C\u4EE5\u4FBF\u5728\u672A\u6765\u67D0\u4E2A\u65F6\u5019\u628A\u503C\u4EA4\u7ED9\u4F7F\u7528\u8005\u3002</p><h2>\u72B6\u6001</h2><p>\u4E00\u4E2A Promise \u5FC5\u7136\u5904\u4E8E\u4EE5\u4E0B\u51E0\u4E2A\u72B6\u6001\u4E4B\u4E00\uFF1A</p><ul><li>\u5F85\u5B9A(<strong>pending</strong>)\uFF1A\u521D\u59CB\u72B6\u6001\uFF0C\u65E2\u6CA1\u6709\u88AB\u5151\u73B0\uFF0C\u4E5F\u6CA1\u6709\u88AB\u62D2\u7EDD</li><li>\u5DF2\u5151\u73B0(<strong>fulfilled</strong>)\uFF1A\u610F\u5473\u7740\u64CD\u4F5C\u6210\u529F\u5B8C\u6210</li><li>\u5DF2\u62D2\u7EDD(<strong>rejected</strong>)\uFF1A\u610F\u5473\u7740\u64CD\u4F5C\u5931\u8D25</li></ul><p>\u5BF9\u4E8E\u5DF2\u5151\u73B0\u548C\u5DF2\u62D2\u7EDD\uFF0C\u4E5F\u53EF\u4EE5\u79F0\u4E4B\u4E3A \u5DF2\u6572\u5B9A(<strong>settled</strong>) \u6216\u662F \u5DF2\u51B3\u8BAE(<strong>resolved</strong>)</p><p>\u5F85\u5B9A\u72B6\u6001\u7684 Promise \u5BF9\u8C61\u8981\u4E48\u4F1A\u901A\u8FC7\u4E00\u4E2A\u503C\u88AB\u5151\u73B0\uFF0C\u8981\u4E48\u4F1A\u901A\u8FC7\u4E00\u4E2A\u539F\u56E0\uFF08\u9519\u8BEF\uFF09\u88AB\u62D2\u7EDD\u3002\u5F53\u8FD9\u4E9B\u60C5\u51B5\u4E4B\u4E00\u53D1\u751F\u65F6\uFF0C\u6211\u4EEC\u7528 promise \u7684 <code>then</code> \u65B9\u6CD5\u6392\u5217\u8D77\u6765\u7684\u76F8\u5173\u5904\u7406\u7A0B\u5E8F\u5C31\u4F1A\u88AB\u8C03\u7528\u3002\u5982\u679C promise \u5728\u4E00\u4E2A\u76F8\u5E94\u7684\u5904\u7406\u7A0B\u5E8F<strong>\u88AB\u7ED1\u5B9A\u65F6\u5C31\u5DF2\u7ECF\u88AB\u5151\u73B0\u6216\u88AB\u62D2\u7EDD</strong>\u4E86\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u5904\u7406\u7A0B\u5E8F\u4E5F<strong>\u540C\u6837\u4F1A\u88AB\u8C03\u7528</strong>\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4E0D\u7BA1\u600E\u6837\u5904\u7406\u7A0B\u5E8F\u90FD\u4F1A\u6267\u884C\u7684</p><h2>\u65B9\u6CD5</h2><h3>Promise</h3><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2">	<span class="token comment">// resolve(data)</span></code>
<code class="code-line odd line-3">    <span class="token comment">// reject(reason)</span></code>
<code class="code-line even last-row line-4"><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div></div><h3>Promise.all(iterable)</h3><p>\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 promise \u5BF9\u8C61\uFF0C\u7B49\u5230<strong>\u6240\u6709\u7684 promise \u5BF9\u8C61\u90FD\u6210\u529F\u6216\u6709\u4EFB\u610F\u4E00\u4E2A promise \u5931\u8D25</strong>\u3002</p><p>\u5982\u679C\u6240\u6709\u7684 promise \u90FD\u6210\u529F\u4E86\uFF0C\u5B83\u4F1A\u628A\u4E00\u4E2A\u5305\u542B iterable \u91CC\u6240\u6709 promise \u8FD4\u56DE\u503C\u7684\u6570\u7EC4\u4F5C\u4E3A\u6210\u529F\u56DE\u8C03\u7684\u8FD4\u56DE\u503C\u3002\u987A\u5E8F\u8DDF iterable \u7684\u987A\u5E8F\u4FDD\u6301\u4E00\u81F4\u3002</p><p>\u4E00\u65E6\u6709\u4EFB\u610F\u4E00\u4E2A iterable \u91CC\u9762\u7684 promise \u5BF9\u8C61\u5931\u8D25\u5219\u7ACB\u5373\u4EE5\u8BE5 promise \u5BF9\u8C61\u5931\u8D25\u7684\u7406\u7531\u6765\u62D2\u7EDD\u8FD9\u4E2A\u65B0\u7684 promise\u3002</p><ul><li>\u6240\u6709\u6210\u529F\u5C31\u8FD4\u56DE\u6210\u529F\u7684\u7ED3\u679C\u6570\u7EC4\uFF0C\u4E00\u4E2A\u5931\u8D25\u5C31\u8FD4\u56DE\u5931\u8D25\u7684\u7406\u7531</li></ul><h3>Promise.allSettled(iterable)</h3><p>\u7B49\u5230<strong>\u6240\u6709 promise \u90FD\u5DF2\u6572\u5B9A</strong>\uFF08\u6BCF\u4E2A promise \u90FD\u5DF2\u5151\u73B0\u6216\u5DF2\u62D2\u7EDD\uFF09\u3002</p><p>\u8FD4\u56DE\u4E00\u4E2A promise\uFF0C\u8BE5 promise \u5728\u6240\u6709 promise \u90FD\u6572\u5B9A\u540E\u5B8C\u6210\uFF0C\u5E76\u5151\u73B0\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4\uFF0C\u5176\u4E2D\u7684\u5BF9\u8C61\u5BF9\u5E94\u6BCF\u4E2A promise \u7684\u7ED3\u679C\u3002</p><ul><li>\u53EA\u8981\u6240\u6709\u90FD\u6267\u884C\u5B8C\u5C31\u884C\uFF0C\u4E0D\u7BA1\u6210\u529F\u4E0E\u5426\uFF0C\u8FD4\u56DE\u5BF9\u8C61\u6570\u7EC4</li><li>{ status: \u2018rejected\u2019, reason: \u2018\u2019 }</li><li>{ status: \u2018fulfilled\u2019, value: \u2018\u2019 }</li></ul><h3>Promise.any(iterable)</h3><p>\u63A5\u6536\u4E00\u4E2A promise \u5BF9\u8C61\u7684\u96C6\u5408\uFF0C\u5F53\u5176\u4E2D\u7684<strong>\u4EFB\u610F\u4E00\u4E2A promise \u6210\u529F</strong>\uFF0C\u5C31\u8FD4\u56DE\u90A3\u4E2A\u6210\u529F\u7684 promise \u7684\u503C\u3002</p><ul><li>\u90FD\u5931\u8D25\uFF1A[AggregateError: All promises were rejected]</li></ul><h3>Promise.race(iterable)</h3><p>\u7B49\u5230<strong>\u4EFB\u610F\u4E00\u4E2A promise \u7684\u72B6\u6001\u53D8\u4E3A\u5DF2\u6572\u5B9A</strong>\u3002</p><p>\u5F53 iterable \u53C2\u6570\u91CC\u7684\u4EFB\u610F\u4E00\u4E2A\u5B50 promise \u6210\u529F\u6216\u5931\u8D25\u540E\uFF0C\u7236 promise \u9A6C\u4E0A\u4E5F\u4F1A\u7528\u5B50 promise \u7684\u6210\u529F\u8FD4\u56DE\u503C\u6216\u5931\u8D25\u8BE6\u60C5\u4F5C\u4E3A\u53C2\u6570\u8C03\u7528\u7236 promise \u7ED1\u5B9A\u7684\u76F8\u5E94\u5904\u7406\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u8BE5 promise \u5BF9\u8C61</p><ul><li>\u4E0D\u7BA1\u6210\u529F\u4E0E\u5426\uFF0C\u6267\u884C\u5B8C\u7684\u7B2C\u4E00\u4E2A\u8FD4\u56DE</li></ul><h3>Promise.reject(reason)</h3><p>\u8FD4\u56DE\u4E00\u4E2A<strong>\u72B6\u6001\u4E3A\u5DF2\u62D2\u7EDD\u7684 Promise \u5BF9\u8C61</strong>\uFF0C\u5E76\u5C06\u7ED9\u5B9A\u7684\u5931\u8D25\u4FE1\u606F\u4F20\u9012\u7ED9\u5BF9\u5E94\u7684\u5904\u7406\u51FD\u6570\u3002</p><h3>Promise.resolve(value)</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u72B6\u6001\u7531\u7ED9\u5B9A value \u51B3\u5B9A\u7684 Promise \u5BF9\u8C61\u3002\u5982\u679C\u8BE5\u503C\u662F <code>thenable</code>\uFF08\u5373\uFF0C\u5E26\u6709 then \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF09\uFF0C\u8FD4\u56DE\u7684Promise \u5BF9\u8C61\u7684<strong>\u6700\u7EC8\u72B6\u6001\u7531 then \u65B9\u6CD5\u6267\u884C\u7ED3\u679C\u51B3\u5B9A</strong>\uFF1B\u5426\u5219\uFF0C<strong>\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\u72B6\u6001\u4E3A\u5DF2\u5151\u73B0</strong>\uFF0C\u5E76\u4E14\u5C06\u8BE5 value \u4F20\u9012\u7ED9\u5BF9\u5E94\u7684 then \u65B9\u6CD5</p><ul><li>resolve \u91CC\u9762\u8FD4\u56DE\u4E00\u4E2A reject \uFF0C\u5411\u4E0B\u4F20\u9012\u7684\u662F reject</li></ul><h3>Promise.prototype.then()</h3><p>\u4E3A promise \u6DFB\u52A0\u88AB\u5151\u73B0\u548C\u88AB\u62D2\u7EDD\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5176\u4EE5\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u5151\u73B0 promise\u3002\u82E5\u4E0D\u5904\u7406\u5DF2\u5151\u73B0\u6216\u8005\u5DF2\u62D2\u7EDD\u72B6\u6001\uFF08\u4F8B\u5982\uFF0ConFulfilled \u6216 onRejected \u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\uFF09\uFF0C\u5219\u8FD4\u56DE promise \u88AB\u6572\u5B9A\u65F6\u7684\u503C</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">const</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">=</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2">    </code>
<code class="code-line odd line-3"><span class="token punctuation">}</span></code>
<code class="code-line even line-4"><span class="token keyword">const</span> <span class="token function-variable function">onRejected</span> <span class="token operator">=</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-5">    </code>
<code class="code-line even line-6"><span class="token punctuation">}</span></code>
<code class="code-line odd last-row line-7"><span class="token keyword">const</span> otherPromise <span class="token operator">=</span> myPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onFulfilled<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span></code></pre></div></div><ul><li>onRejected \u53EF\u9009\uFF0C\u5728\u8FD9\u91CC\u6CA1\u6709\u9519\u8BEF\u56DE\u8C03\u5C31\u9700\u8981\u6DFB\u52A0 catch</li></ul><h3>Promise.prototype.catch()</h3><p>\u4E3A promise \u6DFB\u52A0\u4E00\u4E2A\u88AB\u62D2\u7EDD\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 promise\uFF0C\u82E5\u56DE\u8C03\u51FD\u6570\u88AB\u8C03\u7528\uFF0C\u5219\u5151\u73B0\u5176\u8FD4\u56DE\u503C\uFF0C\u5426\u5219\u5151\u73B0\u539F\u6765\u7684 promise \u5151\u73B0\u7684\u503C\u3002</p><ul><li>myPromise.then(onFulfilled, onRejected) === myPromise.then(onFulfilled).catch(onRejected)</li></ul><h3>Promise.prototype.finally()</h3><p>finally() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise\u3002\u5728 promise \u7ED3\u675F\u65F6\uFF0C\u65E0\u8BBA\u7ED3\u679C\u662F fulfilled \u6216\u8005\u662F rejected\uFF0C\u90FD\u4F1A\u6267\u884C\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002\u8FD9\u4E3A\u5728 Promise \u662F\u5426\u6210\u529F\u5B8C\u6210\u540E\u90FD\u9700\u8981\u6267\u884C\u7684\u4EE3\u7801\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u5F0F\u3002\u8FD9\u907F\u514D\u4E86\u540C\u6837\u7684\u8BED\u53E5\u9700\u8981\u5728 then() \u548C catch() \u4E2D\u5404\u5199\u4E00\u6B21\u7684\u60C5\u51B5\u3002</p><h3>\u6CE8\u610F</h3><ul><li><code>then</code>,<code>catch</code>,<code>finally</code> \u90FD\u8FD4\u56DE Promise\uFF0C\u90FD\u53EF\u7EE7\u7EED\u5411\u4E0B\u94FE\u5F0F\u8C03\u7528</li><li>new Promise \u4E2D\u7684\u4EE3\u7801\u662F\u540C\u6B65\u6267\u884C\u7684\uFF0C\u56DE\u8C03 then \u4E4B\u540E\u662F\u5F02\u6B65\u7684\u5FAE\u4EFB\u52A1</li><li>Promise \u7684\u94FE\u5F0F\u8C03\u7528\u4F1A\u5728\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\u5468\u671F\u4E2D\u6267\u884C\u5B8C\u6BD5\uFF0C\u4F46\u8981\u6CE8\u610F\u6B21\u5E8F\uFF0C\u662F\u653E\u5728\u5FAE\u4EFB\u52A1\u961F\u5C3E</li><li>then \u548C catch \u4E2D\u53EA\u4F1A\u5904\u7406\u4E00\u6B21\u5F02\u5E38\uFF0C\u540E\u9762\u7684\u4E0D\u518D\u5904\u7406</li><li>async await \u662F \u8BED\u6CD5\u7CD6\uFF0Cawait \u524D\u7684\u662F\u540C\u6B65\u6267\u884C\uFF0Cawait \u540E\u7684\u4EE3\u7801\u662F\u5F02\u6B65\u6267\u884C\u7684\u5FAE\u4EFB\u52A1</li></ul><p><strong>\u8865\u5145\uFF1A\u5728 node \u73AF\u5883\u4E0B\uFF0Cprocess.nextTick \u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E Promise</strong></p><h2>\u624B\u5199 Promise</h2><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token comment">// \u72B6\u6001\u7801</span></code>
<code class="code-line even line-2"><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span></code>
<code class="code-line odd line-3"><span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span></code>
<code class="code-line even line-4"><span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span></code>
<code class="code-line odd line-5"></code>
<code class="code-line even line-6"><span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-7"></code>
<code class="code-line even line-8">  state <span class="token operator">=</span> <span class="token constant">PENDING</span> <span class="token comment">// \u5F53\u524D\u72B6\u6001</span></code>
<code class="code-line odd line-9">  data <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// \u6210\u529F\u7684\u6570\u636E</span></code>
<code class="code-line even line-10">  reason <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// \u5931\u8D25\u7684\u7406\u7531</span></code>
<code class="code-line odd line-11">  onFulfilled <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u9700\u8981\u6267\u884C\u7684\u6210\u529F\u56DE\u8C03\u961F\u5217</span></code>
<code class="code-line even line-12">  onRejected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u9700\u8981\u6267\u884C\u7684\u5931\u8D25\u56DE\u8C03\u961F\u5217</span></code>
<code class="code-line odd line-13"></code>
<code class="code-line even line-14">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-15"></code>
<code class="code-line even line-16">    <span class="token comment">// \u5C06 class \u5185\u90E8\u51FD\u6570\u4E0E class \u4E2D\u7684 this \u7ED1\u5B9A</span></code>
<code class="code-line odd line-17">    <span class="token comment">// \u5728 executor \u4E2D\u6267\u884C\u65F6\u4F7F\u7528\u5F53\u524D\u73AF\u5883\u7684 this</span></code>
<code class="code-line even line-18">    <span class="token keyword">const</span> resolve <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-19">    <span class="token keyword">const</span> reject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></code>
<code class="code-line even line-20"></code>
<code class="code-line odd line-21">    <span class="token keyword">try</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-22">      executor <span class="token operator">&amp;&amp;</span> <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line odd line-23">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token comment">// executor \u6267\u884C\u51FA\u9519</span></code>
<code class="code-line even line-24"></code>
<code class="code-line odd line-25">  <span class="token punctuation">}</span></code>
<code class="code-line even line-26">    </code>
<code class="code-line odd line-27">  <span class="token comment">// resolve | reject</span></code>
<code class="code-line even line-28">  <span class="token comment">// \u5F53\u4E14\u4EC5\u5F53\u72B6\u6001\u4E3A PENDING \u65F6\uFF0C\u4E14\u4EC5\u6267\u884C 1 \u6B21</span></code>
<code class="code-line odd line-29">  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-30">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-31">      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token constant">FULFILLED</span></code>
<code class="code-line even line-32">      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data</code>
<code class="code-line odd line-33">      <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilled<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line even line-34">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-35">  <span class="token punctuation">}</span></code>
<code class="code-line even line-36"></code>
<code class="code-line odd line-37">  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-38">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-39">      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token constant">REJECTED</span></code>
<code class="code-line even line-40">      <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason</code>
<code class="code-line odd line-41">      <span class="token keyword">this</span><span class="token punctuation">.</span>onRejected<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line even line-42">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-43">  <span class="token punctuation">}</span></code>
<code class="code-line even line-44"></code>
<code class="code-line odd line-45"><span class="token punctuation">}</span></code>
<code class="code-line even line-46"></code>
<code class="code-line odd line-47"><span class="token comment">// \u5DE5\u5177\u51FD\u6570</span></code>
<code class="code-line even line-48"><span class="token comment">// \u7528\u4E8E\u5904\u7406 then \u4E2D\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A\u51FD\u6570\uFF0C\u4E14\u4E5F\u542B\u6709 then \u7684\u60C5\u51B5</span></code>
<code class="code-line odd line-49"><span class="token comment">// \u6700\u7EC8 promise \u8FD4\u56DE\u7684\u662F then \u7684\u5C3D\u5934</span></code>
<code class="code-line even line-50"><span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> result<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-51">  <span class="token keyword">if</span> <span class="token punctuation">(</span>promise <span class="token operator">===</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// then \u4E2D\u8FD4\u56DE\u672C\u8EAB\u7684\u60C5\u51B5\uFF0C\u5FAA\u73AF\u8C03\u7528\u62A5\u9519</span></code>
<code class="code-line even line-52">    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Chaining cycle&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-53">  <span class="token punctuation">}</span></code>
<code class="code-line even line-54"></code>
<code class="code-line odd line-55">  <span class="token comment">// \u4E3A\u7A7A\u503C null \u65F6</span></code>
<code class="code-line even line-56">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code>
<code class="code-line odd line-57"></code>
<code class="code-line even line-58">  <span class="token comment">// \u9664 object | function , \u56E0\u4E3A\u53EA\u6709\u8FD9\u4E24\u8005\u53EF\u4EE5\u7528 \u70B9\u8FD0\u7B97\u7B26, \u542B\u6709\u4E0B\u4E00\u4E2A then</span></code>
<code class="code-line odd line-59">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> result <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> result <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code>
<code class="code-line even line-60"></code>
<code class="code-line odd line-61">  <span class="token keyword">let</span> over <span class="token comment">// \u7528\u4E8E\u5224\u65AD\u672C\u6B21 then \u662F\u5426\u5B8C\u6210\u7684\u6807\u5FD7\u4F4D</span></code>
<code class="code-line even line-62">  <span class="token keyword">try</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-63">    <span class="token keyword">const</span> moreThen <span class="token operator">=</span> result<span class="token punctuation">.</span>then</code>
<code class="code-line even line-64">	</code>
<code class="code-line odd line-65">    <span class="token comment">// \u867D\u7136\u6709 then, \u4F46\u4E0D\u662F\u51FD\u6570</span></code>
<code class="code-line even line-66">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> moreThen <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-67">      <span class="token keyword">if</span> <span class="token punctuation">(</span>over<span class="token punctuation">)</span> <span class="token keyword">return</span></code>
<code class="code-line even line-68">      over <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line odd line-69">      <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code>
<code class="code-line even line-70">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-71"></code>
<code class="code-line even line-72">    <span class="token function">moreThen</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span></code>
<code class="code-line odd line-73">      promise<span class="token punctuation">,</span> <span class="token comment">// \u4F7F\u7528 promise \u4F5C\u4E3A moreThen \u7684 this \u8C03\u7528</span></code>
<code class="code-line even line-74"></code>
<code class="code-line odd line-75">      <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// onFulfilled \u6210\u529F\u56DE\u8C03</span></code>
<code class="code-line even line-76">        <span class="token keyword">if</span> <span class="token punctuation">(</span>over<span class="token punctuation">)</span> <span class="token keyword">return</span></code>
<code class="code-line odd line-77">        over <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line even line-78">        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> data<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token comment">// \u5BF9\u4E8E data, \u9012\u5F52\u5224\u65AD, \u53EF\u80FD\u8FD8\u6709\u4E0B\u4E2A then</span></code>
<code class="code-line odd line-79">      <span class="token punctuation">}</span><span class="token punctuation">,</span></code>
<code class="code-line even line-80"></code>
<code class="code-line odd line-81">      <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// onRejected \u5931\u8D25\u56DE\u8C03</span></code>
<code class="code-line even line-82">        <span class="token keyword">if</span> <span class="token punctuation">(</span>over<span class="token punctuation">)</span> <span class="token keyword">return</span></code>
<code class="code-line odd line-83">        over <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line even line-84">        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span></code>
<code class="code-line odd line-85">      <span class="token punctuation">}</span></code>
<code class="code-line even line-86">    <span class="token punctuation">)</span></code>
<code class="code-line odd line-87"></code>
<code class="code-line even line-88">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-89">    <span class="token keyword">if</span> <span class="token punctuation">(</span>over<span class="token punctuation">)</span> <span class="token keyword">return</span></code>
<code class="code-line even line-90">    over <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line odd line-91">    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span></code>
<code class="code-line even line-92">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-93"><span class="token punctuation">}</span></code>
<code class="code-line even line-94"></code>
<code class="code-line odd line-95"><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-96">  <span class="token comment">// \u5F53\u4E0D\u4E3A\u51FD\u6570\u65F6\uFF0C\u5C01\u88C5\u6210\u51FD\u6570</span></code>
<code class="code-line odd line-97">  onFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value</code>
<code class="code-line even line-98">  onRejected <span class="token operator">=</span> <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">onRejected</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token punctuation">}</span></code>
<code class="code-line odd line-99"></code>
<code class="code-line even line-100">  <span class="token comment">// then \u4E2D\u9700\u8981\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 promise</span></code>
<code class="code-line odd line-101">  <span class="token keyword">const</span> newPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-102">    <span class="token comment">// \u4E0D\u540C\u7684\u72B6\u6001\u5224\u65AD, FULFILLED | REJECTED \u4E00\u5F00\u59CB\u5C31\u662F\u6572\u5B9A\u7684\u72B6\u6001</span></code>
<code class="code-line odd line-103">    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-104">      <span class="token keyword">case</span> <span class="token constant">FULFILLED</span><span class="token operator">:</span></code>
<code class="code-line odd line-105">        <span class="token keyword">return</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// setTimeout \u662F\u4E3A\u4E86\u5F02\u6B65\u5904\u7406</span></code>
<code class="code-line even line-106">          <span class="token keyword">try</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-107">            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>newPromise<span class="token punctuation">,</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line even line-108">          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">}</span></code>
<code class="code-line odd line-109">        <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-110">      <span class="token keyword">case</span> <span class="token constant">REJECTED</span><span class="token operator">:</span></code>
<code class="code-line odd line-111">        <span class="token keyword">return</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-112">          <span class="token keyword">try</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-113">            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>newPromise<span class="token punctuation">,</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line even line-114">          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">}</span></code>
<code class="code-line odd line-115">        <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-116">      <span class="token keyword">case</span> <span class="token constant">PENDING</span><span class="token operator">:</span></code>
<code class="code-line odd line-117">        <span class="token comment">// \u6B64\u65F6\u8FD8\u662F\u52A0\u8F7D\u6001, \u628A\u51FD\u6570\u5B58\u8D77\u6765\u7B49\u52A0\u8F7D\u5B8C\u6210\u540E\u6267\u884C</span></code>
<code class="code-line even line-118">        <span class="token keyword">this</span><span class="token punctuation">.</span>onFulfilled<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-119">          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-120">            <span class="token keyword">try</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-121">              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>newPromise<span class="token punctuation">,</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line even line-122">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">}</span></code>
<code class="code-line odd line-123">          <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-124">        <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-125">        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejected<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-126">          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-127">            <span class="token keyword">try</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-128">              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>newPromise<span class="token punctuation">,</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line odd line-129">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">}</span></code>
<code class="code-line even line-130">          <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-131">        <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-132">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-133">  <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-134"></code>
<code class="code-line odd line-135">  <span class="token keyword">return</span> newPromise</code>
<code class="code-line even line-136"></code>
<code class="code-line odd line-137"><span class="token punctuation">}</span></code>
<code class="code-line even line-138"></code>
<code class="code-line odd line-139"><span class="token comment">// \u7B2C\u4E00\u4E2A\u8FD0\u884C\u5B8C\u7684\u8C03\u7528\u4F20\u5165\u7684 resolve | reject</span></code>
<code class="code-line even line-140">Promise<span class="token punctuation">.</span><span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-141">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-142">    promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">promise</span> <span class="token operator">=&gt;</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-143">  <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-144"><span class="token punctuation">}</span></code>
<code class="code-line odd line-145"></code>
<code class="code-line even line-146"><span class="token comment">// \u6240\u6709\u8FD0\u884C\u5B8C resolve, \u4E00\u4E2A\u51FA\u9519 reject</span></code>
<code class="code-line odd line-147">Promise<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-148">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-149">    <span class="token keyword">let</span> awaitFor <span class="token operator">=</span> promises<span class="token punctuation">.</span>length <span class="token comment">// \u8BB0\u5F55\u9700\u8981\u7B49\u5F85\u8FD0\u884C\u5B8C\u7684\u4EFB\u52A1\u4E2A\u6570</span></code>
<code class="code-line even line-150">    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>awaitFor<span class="token punctuation">)</span></code>
<code class="code-line odd line-151">    promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-152">      promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></code>
<code class="code-line odd line-153">        <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-154">          result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> data</code>
<code class="code-line odd line-155">          awaitFor<span class="token operator">--</span></code>
<code class="code-line even line-156">          <span class="token keyword">if</span> <span class="token punctuation">(</span>awaitFor <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// \u8FD0\u884C\u5B8C\u6BD5</span></code>
<code class="code-line odd line-157">        <span class="token punctuation">}</span><span class="token punctuation">,</span></code>
<code class="code-line even line-158">        <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span></code>
<code class="code-line odd line-159">      <span class="token punctuation">)</span></code>
<code class="code-line even line-160">    <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-161">  <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-162"><span class="token punctuation">}</span></code>
<code class="code-line odd line-163"></code>
<code class="code-line even last-row line-164">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Promise</code></pre></div></div><h2>\u53D6\u6D88 Promise</h2><ol><li>\u501F\u52A9 reject</li></ol><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">function</span> <span class="token function">canAbortPromise</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span><span class="token punctuation">{</span></code>
<code class="code-line even line-2">	<span class="token keyword">let</span> _reject</code>
<code class="code-line odd line-3">    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-4">        _reject <span class="token operator">=</span> reject</code>
<code class="code-line odd line-5">        executor <span class="token operator">&amp;&amp;</span> <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line even line-6">    <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-7">    promise<span class="token punctuation">.</span><span class="token function-variable function">abort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-8">        <span class="token function">_reject</span><span class="token punctuation">(</span><span class="token string">&quot;Promise Abort&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-9">    <span class="token punctuation">}</span></code>
<code class="code-line even line-10">    <span class="token keyword">return</span> promise</code>
<code class="code-line odd line-11"><span class="token punctuation">}</span></code>
<code class="code-line even line-12"></code>
<code class="code-line odd line-13"><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token function">canAbortPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-14">    <span class="token comment">// todo</span></code>
<code class="code-line odd line-15"><span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-16"></code>
<code class="code-line odd last-row line-17">promise<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5373\u53EF\u4E2D\u6B62</span></code></pre></div></div><ol start="2"><li>\u4F7F\u7528 AbortController</li></ol><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">function</span> <span class="token function">canAbortPromise</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2">  <span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-3">  <span class="token keyword">const</span> signal <span class="token operator">=</span> controller<span class="token punctuation">.</span>signal</code>
<code class="code-line even line-4">  <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-5">    signal<span class="token punctuation">.</span><span class="token function-variable function">onabort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-6">      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;Promise Abort&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-7">    <span class="token punctuation">}</span></code>
<code class="code-line even line-8">    executor <span class="token operator">&amp;&amp;</span> <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span></code>
<code class="code-line odd line-9">  <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-10">  promise<span class="token punctuation">.</span><span class="token function-variable function">abort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-11">    controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-12">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-13">  <span class="token keyword">return</span> promise</code>
<code class="code-line even line-14"><span class="token punctuation">}</span></code>
<code class="code-line odd line-15"></code>
<code class="code-line even line-16"><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token function">canAbortPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-17">    <span class="token comment">// todo</span></code>
<code class="code-line even line-18"><span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-19"></code>
<code class="code-line even last-row line-20">promise<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5373\u53EF\u4E2D\u6B62</span></code></pre></div></div>`,51),t=[c],r={title:null,tags:["\u72B6\u6001","\u624B\u5199promise"],categories:null,description:"Promise \u6709\u4EC0\u4E48\u7528\uFF0C\u600E\u4E48\u7528\uFF0C\u6709\u54EA\u4E9B\u65B9\u6CD5\u5462\uFF1F\u5982\u4F55\u624B\u5199\u4E00\u4E2A\u7B80\u5355\u7684 Promise",publishTime:"2022-09-06T21:31:35.000Z",updateTime:null,img:null,toc:!0,comment:!0,publish:!0},k="",F=s({__name:"index",setup(p,{expose:n}){return n({frontmatter:{title:null,tags:["\u72B6\u6001","\u624B\u5199promise"],categories:null,description:"Promise \u6709\u4EC0\u4E48\u7528\uFF0C\u600E\u4E48\u7528\uFF0C\u6709\u54EA\u4E9B\u65B9\u6CD5\u5462\uFF1F\u5982\u4F55\u624B\u5199\u4E00\u4E2A\u7B80\u5355\u7684 Promise",publishTime:"2022-09-06T21:31:35.000Z",updateTime:null,img:null,toc:!0,comment:!0,publish:!0},excerpt:void 0}),(l,i)=>(a(),e("div",u,t))}});export{F as default,k as excerpt,r as frontmatter};
