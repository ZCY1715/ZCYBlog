import{d as s,o as a,c as e,a as o}from"./@vue.01ebc98a.js";const p={class:"markdown-body"},t=o(`<h1>\u5355\u8C03\u6808</h1><p><strong>\u7EF4\u62A4\u4E00\u4E2A\u5355\u8C03\u6808\uFF0C\u7528\u4E8E\u786E\u5B9A\u524D\u65B9\u6240\u6709\u5143\u7D20\u7684\u6700\u5927\u503C\u6216\u6700\u5C0F\u503C</strong></p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">class</span> <span class="token class-name">MonotonicStack</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3">  _mainArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line even line-4">  _arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line odd line-5">  _customCompare <span class="token operator">=</span> <span class="token keyword">null</span></code>
<code class="code-line even line-6"></code>
<code class="code-line odd line-7">  <span class="token comment">/**</span></code>
<code class="code-line even line-8">   <span class="token operator">*</span> </code>
<code class="code-line odd line-9">   <span class="token operator">*</span> @param <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">itemInStack<span class="token punctuation">,</span> itemAdd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Boolean<span class="token punctuation">}</span> compare \u51B3\u5B9A\u662F\u5426\u8FDB\u5165\u5355\u8C03\u6808</code>
<code class="code-line even line-10">   <span class="token operator">*</span> @param <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span> arr</code>
<code class="code-line odd line-11">   <span class="token operator">*</span><span class="token operator">/</span></code>
<code class="code-line even line-12">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">compare<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-13">    <span class="token keyword">this</span><span class="token punctuation">.</span>_customCompare <span class="token operator">=</span> compare</code>
<code class="code-line even line-14">    arr <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-15">  <span class="token punctuation">}</span></code>
<code class="code-line even line-16"></code>
<code class="code-line odd line-17">  <span class="token function">compare</span><span class="token punctuation">(</span><span class="token parameter">itemInStack<span class="token punctuation">,</span> itemAdd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-18">    <span class="token keyword">if</span> <span class="token punctuation">(</span></code>
<code class="code-line odd line-19">      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_customCompare <span class="token operator">||</span></code>
<code class="code-line even line-20">      <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_customCompare <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-21">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-22">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Compare Function is required !&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-23">    <span class="token punctuation">}</span></code>
<code class="code-line even line-24">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_customCompare</span><span class="token punctuation">(</span>itemInStack<span class="token punctuation">,</span> itemAdd<span class="token punctuation">)</span></code>
<code class="code-line odd line-25">  <span class="token punctuation">}</span></code>
<code class="code-line even line-26"></code>
<code class="code-line odd line-27">  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-28">    <span class="token keyword">this</span><span class="token punctuation">.</span>_mainArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code>
<code class="code-line odd line-29">    <span class="token keyword">if</span> <span class="token punctuation">(</span></code>
<code class="code-line even line-30">      <span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span></code>
<code class="code-line odd line-31">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span></code>
<code class="code-line even line-32">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-33">      <span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code>
<code class="code-line even line-34">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-35">  <span class="token punctuation">}</span></code>
<code class="code-line even line-36"></code>
<code class="code-line odd line-37">  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-38">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_mainArr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span></code>
<code class="code-line odd line-39">    <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_mainArr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-40">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-41">      <span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-42">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-43">    <span class="token keyword">return</span> item</code>
<code class="code-line even line-44">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-45"></code>
<code class="code-line even line-46">  <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-47">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_mainArr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_mainArr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span></code>
<code class="code-line even line-48">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-49"></code>
<code class="code-line even line-50">  <span class="token function">maxmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-51">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span></code>
<code class="code-line even line-52">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-53"></code>
<code class="code-line even last-row line-54"><span class="token punctuation">}</span></code></pre></div></div><p><strong>\u7528\u4E8E\u7EDF\u8BA1\u76EE\u6807\u503C\u524D\u540E\u6BD4\u5176\u6EE1\u8DB3\u4E00\u5B9A\u89C4\u5F8B\u7684\u5176\u4ED6\u503C\u6570\u91CF</strong></p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token comment">/**</span></code>
<code class="code-line even line-2"> <span class="token operator">*</span> </code>
<code class="code-line odd line-3"> <span class="token operator">*</span> @param <span class="token punctuation">{</span>Array<span class="token punctuation">}</span> arr </code>
<code class="code-line even line-4"> <span class="token operator">*</span> @param <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">itemCurrent<span class="token punctuation">,</span>itemOther</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Boolean<span class="token punctuation">}</span> compare \u51B3\u5B9A\u7EDF\u8BA1\u524D\u540E\u6EE1\u8DB3\u7684\u89C4\u5F8B</code>
<code class="code-line odd line-5"> <span class="token operator">*</span> @<span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token literal-property property">beforeItemIndexs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">afterItemIndex</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span> \u8FD4\u56DE\u524D\u540E\u7B2C\u4E00\u4E2A\u4E0D\u6EE1\u8DB3\u89C4\u5F8B\u7684\u5E8F\u53F7</code>
<code class="code-line even line-6"> <span class="token operator">*</span><span class="token operator">/</span></code>
<code class="code-line odd line-7"><span class="token keyword">function</span> <span class="token function">monotonicStackUtilize</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-8"></code>
<code class="code-line odd line-9">  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length</code>
<code class="code-line even line-10"></code>
<code class="code-line odd line-11">  <span class="token keyword">const</span> _arrIndex <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line even line-12">  <span class="token keyword">const</span> <span class="token function-variable function">topIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _arrIndex<span class="token punctuation">[</span>_arrIndex<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token operator">-</span><span class="token number">1</span></code>
<code class="code-line odd line-13">  <span class="token keyword">const</span> beforeItemIndexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></code>
<code class="code-line even line-14">  <span class="token keyword">const</span> afterItemIndexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span></code>
<code class="code-line odd line-15"></code>
<code class="code-line even line-16">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-17"></code>
<code class="code-line even line-18">    <span class="token keyword">while</span> <span class="token punctuation">(</span>_arrIndex<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token function">topIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-19">      afterItemIndexs<span class="token punctuation">[</span>_arrIndex<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> i</code>
<code class="code-line even line-20">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-21">    beforeItemIndexs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">topIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-22">    _arrIndex<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code>
<code class="code-line odd line-23">  <span class="token punctuation">}</span></code>
<code class="code-line even line-24"></code>
<code class="code-line odd line-25">  <span class="token keyword">return</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-26">    beforeItemIndexs<span class="token punctuation">,</span></code>
<code class="code-line odd line-27">    afterItemIndexs</code>
<code class="code-line even line-28">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-29"></code>
<code class="code-line even last-row line-30"><span class="token punctuation">}</span></code></pre></div></div>`,5),c=[t],k={title:null,tags:null,categories:null,description:"\u5355\u8C03\u6808\u7B97\u6CD5\uFF0C\u4E3B\u8981\u7528\u4E8E\u7EDF\u8BA1\u6807\u503C\u524D\u540E\u6BD4\u5176\u6EE1\u8DB3\u4E00\u5B9A\u89C4\u5F8B\u7684\u5176\u4ED6\u503C\u6570\u91CF",publishTime:"2022-10-05T15:06:49.000Z",updateTime:null,img:null,toc:!1,comment:!0,publish:!0},r="",m=s({__name:"index",setup(l,{expose:n}){return n({frontmatter:{title:null,tags:null,categories:null,description:"\u5355\u8C03\u6808\u7B97\u6CD5\uFF0C\u4E3B\u8981\u7528\u4E8E\u7EDF\u8BA1\u6807\u503C\u524D\u540E\u6BD4\u5176\u6EE1\u8DB3\u4E00\u5B9A\u89C4\u5F8B\u7684\u5176\u4ED6\u503C\u6570\u91CF",publishTime:"2022-10-05T15:06:49.000Z",updateTime:null,img:null,toc:!1,comment:!0,publish:!0},excerpt:void 0}),(u,i)=>(a(),e("div",p,c))}});export{m as default,r as excerpt,k as frontmatter};
