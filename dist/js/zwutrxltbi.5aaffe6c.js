import{d as s,o as a,c as e,a as o}from"./@vue.ca4ffc67.js";const t={class:"markdown-body"},p=o(`<h1>\u5E76\u67E5\u96C6\u5B9E\u73B0</h1><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">class</span> <span class="token class-name">DisJointSet</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3">  arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line even line-4"></code>
<code class="code-line odd line-5">  <span class="token comment">/**</span></code>
<code class="code-line even line-6">   <span class="token operator">*</span> @param <span class="token punctuation">{</span>Number<span class="token punctuation">}</span> size </code>
<code class="code-line odd line-7">   <span class="token operator">*</span><span class="token operator">/</span></code>
<code class="code-line even line-8">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-9">    <span class="token keyword">this</span><span class="token punctuation">.</span>arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></code>
<code class="code-line even line-10">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-11"></code>
<code class="code-line even line-12">  <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-13">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> index</code>
<code class="code-line even line-14">    <span class="token comment">// \u8DEF\u5F84\u538B\u7F29</span></code>
<code class="code-line odd line-15">    <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span></code>
<code class="code-line even line-16">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span></code>
<code class="code-line odd line-17">  <span class="token punctuation">}</span></code>
<code class="code-line even line-18"></code>
<code class="code-line odd line-19">  <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-20"></code>
<code class="code-line odd line-21">    <span class="token keyword">const</span> fatherI <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code>
<code class="code-line even line-22">    <span class="token keyword">const</span> fatherJ <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span></code>
<code class="code-line odd line-23">    <span class="token keyword">if</span> <span class="token punctuation">(</span>fatherI <span class="token operator">===</span> fatherJ<span class="token punctuation">)</span> <span class="token keyword">return</span></code>
<code class="code-line even line-24"></code>
<code class="code-line odd line-25">    <span class="token keyword">const</span> sizeI <span class="token operator">=</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherI<span class="token punctuation">]</span></code>
<code class="code-line even line-26">    <span class="token keyword">const</span> sizeJ <span class="token operator">=</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherJ<span class="token punctuation">]</span></code>
<code class="code-line odd line-27"></code>
<code class="code-line even line-28">    <span class="token keyword">if</span> <span class="token punctuation">(</span>sizeI <span class="token operator">&gt;=</span> sizeJ<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-29">      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherJ<span class="token punctuation">]</span> <span class="token operator">=</span> fatherI</code>
<code class="code-line even line-30">      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherI<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span> <span class="token punctuation">(</span>sizeI <span class="token operator">+</span> sizeJ<span class="token punctuation">)</span></code>
<code class="code-line odd line-31">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-32">      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherI<span class="token punctuation">]</span> <span class="token operator">=</span> fatherJ</code>
<code class="code-line odd line-33">      <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherJ<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span> <span class="token punctuation">(</span>sizeI <span class="token operator">+</span> sizeJ<span class="token punctuation">)</span></code>
<code class="code-line even line-34">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-35"></code>
<code class="code-line even line-36">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-37"></code>
<code class="code-line even line-38">  <span class="token function">getSet</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-39">    <span class="token keyword">const</span> setArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line even line-40">    <span class="token keyword">const</span> father <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span></code>
<code class="code-line odd line-41">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-42">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">===</span> father<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-43">        setArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code>
<code class="code-line even line-44">      <span class="token punctuation">}</span></code>
<code class="code-line odd line-45">    <span class="token punctuation">}</span></code>
<code class="code-line even line-46">    <span class="token keyword">return</span> setArr</code>
<code class="code-line odd line-47">  <span class="token punctuation">}</span></code>
<code class="code-line even line-48"></code>
<code class="code-line odd line-49">  <span class="token function">getSetSize</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-50">    <span class="token keyword">const</span> fatherI <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span></code>
<code class="code-line odd line-51">    <span class="token keyword">return</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span>fatherI<span class="token punctuation">]</span></code>
<code class="code-line even line-52">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-53"></code>
<code class="code-line even line-54">  <span class="token function">getAllSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-55">    <span class="token keyword">const</span> allSet <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line even line-56">    <span class="token keyword">const</span> size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length</code>
<code class="code-line odd line-57">    <span class="token keyword">const</span> hasVisit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></code>
<code class="code-line even line-58">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-59">      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasVisit<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span></code>
<code class="code-line even line-60">      <span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token punctuation">]</span></code>
<code class="code-line odd line-61">      hasVisit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line even line-62">      <span class="token keyword">const</span> fatherI <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code>
<code class="code-line odd line-63">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-64">        <span class="token keyword">if</span> <span class="token punctuation">(</span>hasVisit<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span></code>
<code class="code-line odd line-65">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">===</span> fatherI<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-66">          set<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span></code>
<code class="code-line odd line-67">          hasVisit<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line even line-68">        <span class="token punctuation">}</span></code>
<code class="code-line odd line-69">      <span class="token punctuation">}</span></code>
<code class="code-line even line-70">      allSet<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span></code>
<code class="code-line odd line-71">    <span class="token punctuation">}</span></code>
<code class="code-line even line-72">    <span class="token keyword">return</span> allSet</code>
<code class="code-line odd line-73">  <span class="token punctuation">}</span></code>
<code class="code-line even line-74"></code>
<code class="code-line odd line-75">  <span class="token function">isInSameSet</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-76">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span></code>
<code class="code-line odd line-77">  <span class="token punctuation">}</span></code>
<code class="code-line even line-78">    </code>
<code class="code-line odd line-79">  <span class="token function">isAllConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-80">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSetSize</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-81">  <span class="token punctuation">}</span></code>
<code class="code-line even line-82"></code>
<code class="code-line odd last-row line-83"><span class="token punctuation">}</span></code></pre></div></div><h1>\u5E76\u67E5\u96C6 + canvas \u8FF7\u5BAB</h1><p>HTML\uFF1A</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">html</span></div><div class="code-block language-handlebars no-line-numbers" data-lang="html" data-modifiers=""><pre class="language-handlebars" data-lang="html"><code class="code-line odd first-row line-1"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-2"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-3"></code>
<code class="code-line even line-4"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-5">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-6">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-7">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-8">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-9">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-10">    body {</code>
<code class="code-line odd line-11">      margin: 0;</code>
<code class="code-line even line-12">      width: 100vw;</code>
<code class="code-line odd line-13">      height: 100vh;</code>
<code class="code-line even line-14">      overflow: hidden;</code>
<code class="code-line odd line-15">      display: flex;</code>
<code class="code-line even line-16">      justify-content: center;</code>
<code class="code-line odd line-17">      align-items: center;</code>
<code class="code-line even line-18">      background-color: antiquewhite;</code>
<code class="code-line odd line-19">    }</code>
<code class="code-line even line-20"></code>
<code class="code-line odd line-21">    .main {</code>
<code class="code-line even line-22">      width: 600px;</code>
<code class="code-line odd line-23">      height: 600px;</code>
<code class="code-line even line-24">      background-color: #fff;</code>
<code class="code-line odd line-25">      position: relative;</code>
<code class="code-line even line-26">    }</code>
<code class="code-line odd line-27"></code>
<code class="code-line even line-28">    .main canvas {</code>
<code class="code-line odd line-29">      position: absolute;</code>
<code class="code-line even line-30">    }</code>
<code class="code-line odd line-31">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-32"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-33"></code>
<code class="code-line even line-34"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-35">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-36">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maze<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-37">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line even line-38">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-39">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./index.js<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></code>
<code class="code-line even line-40"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></code>
<code class="code-line odd line-41"></code>
<code class="code-line even last-row line-42"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></code></pre></div></div><p>index.js \u4E2D\uFF1A</p><div class="code-wrapper"><div class="heading-row no-heading show-lang"><span class="lang-display">js</span></div><div class="code-block language-javascript no-line-numbers" data-lang="js" data-modifiers=""><pre class="language-javascript" data-lang="js"><code class="code-line odd first-row line-1"><span class="token keyword">const</span> specs <span class="token operator">=</span> <span class="token number">40</span></code>
<code class="code-line even line-2"></code>
<code class="code-line odd line-3"><span class="token keyword">function</span> <span class="token function">randomCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-4">  <span class="token keyword">return</span> <span class="token punctuation">[</span></code>
<code class="code-line odd line-5">    Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> specs<span class="token punctuation">)</span><span class="token punctuation">,</span></code>
<code class="code-line even line-6">    Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> specs<span class="token punctuation">)</span></code>
<code class="code-line odd line-7">  <span class="token punctuation">]</span></code>
<code class="code-line even line-8"><span class="token punctuation">}</span></code>
<code class="code-line odd line-9"></code>
<code class="code-line even line-10"><span class="token keyword">const</span> offsets <span class="token operator">=</span> <span class="token punctuation">[</span></code>
<code class="code-line odd line-11">  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;up&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;down&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code>
<code class="code-line even line-12">  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;down&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;up&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code>
<code class="code-line odd line-13">  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code>
<code class="code-line even line-14">  <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">]</span></code>
<code class="code-line odd line-15"><span class="token punctuation">]</span></code>
<code class="code-line even line-16"></code>
<code class="code-line odd line-17"><span class="token keyword">function</span> <span class="token function">randomNeighber</span><span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> col</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-18">  <span class="token keyword">const</span> canTo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code>
<code class="code-line odd line-19">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> offset <span class="token keyword">of</span> offsets<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-20">    <span class="token keyword">const</span> <span class="token punctuation">[</span>dr<span class="token punctuation">,</span> dc<span class="token punctuation">,</span> d1<span class="token punctuation">,</span> d2<span class="token punctuation">]</span> <span class="token operator">=</span> offset</code>
<code class="code-line odd line-21">    <span class="token keyword">const</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>row <span class="token operator">+</span> dr<span class="token punctuation">,</span> col <span class="token operator">+</span> dc<span class="token punctuation">]</span></code>
<code class="code-line even line-22">    <span class="token keyword">if</span> <span class="token punctuation">(</span></code>
<code class="code-line odd line-23">      r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span></code>
<code class="code-line even line-24">      r <span class="token operator">&gt;=</span> specs <span class="token operator">||</span></code>
<code class="code-line odd line-25">      c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span></code>
<code class="code-line even line-26">      c <span class="token operator">&gt;=</span> specs</code>
<code class="code-line odd line-27">    <span class="token punctuation">)</span> <span class="token keyword">continue</span></code>
<code class="code-line even line-28">    canTo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d1<span class="token punctuation">,</span> d2<span class="token punctuation">]</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-29">  <span class="token punctuation">}</span></code>
<code class="code-line even line-30">  <span class="token keyword">const</span> len <span class="token operator">=</span> canTo<span class="token punctuation">.</span>length</code>
<code class="code-line odd line-31">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>len<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span></code>
<code class="code-line even line-32">  <span class="token keyword">else</span> <span class="token keyword">return</span> canTo<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> len<span class="token punctuation">)</span><span class="token punctuation">]</span></code>
<code class="code-line odd line-33"><span class="token punctuation">}</span></code>
<code class="code-line even line-34"></code>
<code class="code-line odd line-35"><span class="token keyword">function</span> <span class="token function">initMaze</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-36">  <span class="token keyword">const</span> disJointSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DisJointSet</span><span class="token punctuation">(</span>specs <span class="token operator">*</span> specs<span class="token punctuation">)</span></code>
<code class="code-line odd line-37">  <span class="token keyword">const</span> gridWalls <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> specs <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">_</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> specs <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">_</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></code>
<code class="code-line even line-38">    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></code>
<code class="code-line odd line-39">    <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></code>
<code class="code-line even line-40">    <span class="token literal-property property">up</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></code>
<code class="code-line odd line-41">    <span class="token literal-property property">down</span><span class="token operator">:</span> <span class="token boolean">false</span></code>
<code class="code-line even line-42">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-43">  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>disJointSet<span class="token punctuation">.</span><span class="token function">isInSameSet</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> specs <span class="token operator">*</span> specs <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-44">    <span class="token keyword">const</span> <span class="token punctuation">[</span>row1<span class="token punctuation">,</span> col1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">randomCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-45">    <span class="token keyword">const</span> neighber <span class="token operator">=</span> <span class="token function">randomNeighber</span><span class="token punctuation">(</span>row1<span class="token punctuation">,</span> col1<span class="token punctuation">)</span></code>
<code class="code-line even line-46">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>neighber<span class="token punctuation">)</span> <span class="token keyword">continue</span></code>
<code class="code-line odd line-47">    <span class="token keyword">const</span> <span class="token punctuation">[</span>row2<span class="token punctuation">,</span> col2<span class="token punctuation">,</span> d1<span class="token punctuation">,</span> d2<span class="token punctuation">]</span> <span class="token operator">=</span> neighber</code>
<code class="code-line even line-48">    <span class="token keyword">if</span> <span class="token punctuation">(</span>disJointSet<span class="token punctuation">.</span><span class="token function">isInSameSet</span><span class="token punctuation">(</span></code>
<code class="code-line odd line-49">      row1 <span class="token operator">*</span> specs <span class="token operator">+</span> col1<span class="token punctuation">,</span></code>
<code class="code-line even line-50">      row2 <span class="token operator">*</span> specs <span class="token operator">+</span> col2</code>
<code class="code-line odd line-51">    <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span></code>
<code class="code-line even line-52">    disJointSet<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span></code>
<code class="code-line odd line-53">      row1 <span class="token operator">*</span> specs <span class="token operator">+</span> col1<span class="token punctuation">,</span></code>
<code class="code-line even line-54">      row2 <span class="token operator">*</span> specs <span class="token operator">+</span> col2</code>
<code class="code-line odd line-55">    <span class="token punctuation">)</span></code>
<code class="code-line even line-56">    gridWalls<span class="token punctuation">[</span>row1<span class="token punctuation">]</span><span class="token punctuation">[</span>col1<span class="token punctuation">]</span><span class="token punctuation">[</span>d1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line odd line-57">    gridWalls<span class="token punctuation">[</span>row2<span class="token punctuation">]</span><span class="token punctuation">[</span>col2<span class="token punctuation">]</span><span class="token punctuation">[</span>d2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span></code>
<code class="code-line even line-58">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-59">  <span class="token keyword">return</span> gridWalls</code>
<code class="code-line even line-60"><span class="token punctuation">}</span></code>
<code class="code-line odd line-61"></code>
<code class="code-line even line-62"><span class="token keyword">function</span> <span class="token function">drawMaze</span><span class="token punctuation">(</span><span class="token parameter">gridWalls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-63">  <span class="token comment">/**</span></code>
<code class="code-line even line-64">    <span class="token operator">*</span> @type <span class="token punctuation">{</span>HTMLCanvasElement<span class="token punctuation">}</span></code>
<code class="code-line odd line-65">  <span class="token operator">*</span><span class="token operator">/</span></code>
<code class="code-line even line-66">  <span class="token keyword">const</span> mazeCanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;maze&#39;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-67">  <span class="token keyword">const</span> mazeCtx <span class="token operator">=</span> mazeCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line even line-68">  mazeCtx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> mazeCanvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> mazeCanvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span></code>
<code class="code-line odd line-69">  <span class="token keyword">const</span> sideLen <span class="token operator">=</span> mazeCanvas<span class="token punctuation">.</span>width <span class="token operator">/</span> specs</code>
<code class="code-line even line-70">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> specs<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-71">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> specs<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-72">      mazeCtx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-73">      mazeCtx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>i <span class="token operator">*</span> sideLen<span class="token punctuation">,</span> j <span class="token operator">*</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line even line-74">      <span class="token keyword">const</span> cell <span class="token operator">=</span> gridWalls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span></code>
<code class="code-line odd line-75">      mazeCtx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-76">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cell<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-77">        mazeCtx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line even line-78">        mazeCtx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line odd line-79">      <span class="token punctuation">}</span></code>
<code class="code-line even line-80">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cell<span class="token punctuation">.</span>up<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-81">        mazeCtx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line even line-82">        mazeCtx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>sideLen<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-83">      <span class="token punctuation">}</span></code>
<code class="code-line even line-84">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cell<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-85">        mazeCtx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>sideLen<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></code>
<code class="code-line even line-86">        mazeCtx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>sideLen<span class="token punctuation">,</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line odd line-87">      <span class="token punctuation">}</span></code>
<code class="code-line even line-88">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cell<span class="token punctuation">.</span>down<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-89">        mazeCtx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line even line-90">        mazeCtx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>sideLen<span class="token punctuation">,</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line odd line-91">      <span class="token punctuation">}</span></code>
<code class="code-line even line-92">      mazeCtx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-93">      mazeCtx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-94">      mazeCtx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-95">    <span class="token punctuation">}</span></code>
<code class="code-line even line-96">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-97"><span class="token punctuation">}</span></code>
<code class="code-line even line-98"></code>
<code class="code-line odd line-99"></code>
<code class="code-line even line-100"><span class="token keyword">function</span> <span class="token function">drawControl</span><span class="token punctuation">(</span><span class="token parameter">gridWalls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-101">  <span class="token comment">/**</span></code>
<code class="code-line even line-102">    <span class="token operator">*</span> @type <span class="token punctuation">{</span>HTMLCanvasElement<span class="token punctuation">}</span></code>
<code class="code-line odd line-103">  <span class="token operator">*</span><span class="token operator">/</span></code>
<code class="code-line even line-104">  <span class="token keyword">const</span> controlCanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;control&#39;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-105">  <span class="token keyword">const</span> controlCtx <span class="token operator">=</span> controlCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line even line-106">  <span class="token keyword">const</span> sideLen <span class="token operator">=</span> controlCanvas<span class="token punctuation">.</span>width <span class="token operator">/</span> specs</code>
<code class="code-line odd line-107">  <span class="token keyword">const</span> currentPoint <span class="token operator">=</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-108">    <span class="token literal-property property">row</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></code>
<code class="code-line odd line-109">    <span class="token literal-property property">col</span><span class="token operator">:</span> <span class="token number">0</span></code>
<code class="code-line even line-110">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-111">  <span class="token keyword">const</span> endPoint <span class="token operator">=</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-112">    <span class="token literal-property property">row</span><span class="token operator">:</span> specs <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span></code>
<code class="code-line odd line-113">    <span class="token literal-property property">col</span><span class="token operator">:</span> specs <span class="token operator">-</span> <span class="token number">1</span></code>
<code class="code-line even line-114">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-115">  <span class="token keyword">function</span> <span class="token function">drawCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-116">    controlCtx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-117">    <span class="token keyword">const</span> <span class="token punctuation">{</span> row<span class="token punctuation">,</span> col <span class="token punctuation">}</span> <span class="token operator">=</span> currentPoint</code>
<code class="code-line even line-118">    controlCtx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>row <span class="token operator">*</span> sideLen<span class="token punctuation">,</span> col <span class="token operator">*</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line odd line-119">    controlCtx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;#cc0099&quot;</span></code>
<code class="code-line even line-120">    controlCtx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> sideLen <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">,</span> sideLen <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-121">    controlCtx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-122">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-123"></code>
<code class="code-line even line-124">  <span class="token keyword">function</span> <span class="token function">drawEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-125">    controlCtx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-126">    <span class="token keyword">const</span> <span class="token punctuation">{</span> row<span class="token punctuation">,</span> col <span class="token punctuation">}</span> <span class="token operator">=</span> endPoint</code>
<code class="code-line odd line-127">    controlCtx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>row <span class="token operator">*</span> sideLen<span class="token punctuation">,</span> col <span class="token operator">*</span> sideLen<span class="token punctuation">)</span></code>
<code class="code-line even line-128">    controlCtx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;#0099dd&quot;</span></code>
<code class="code-line odd line-129">    controlCtx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> sideLen <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">,</span> sideLen <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span></code>
<code class="code-line even line-130">    controlCtx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-131">  <span class="token punctuation">}</span></code>
<code class="code-line even line-132">  <span class="token keyword">function</span> <span class="token function">initBoth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-133">    controlCtx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> controlCanvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> controlCanvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span></code>
<code class="code-line even line-134">    <span class="token function">drawCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-135">    <span class="token function">drawEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-136">  <span class="token punctuation">}</span></code>
<code class="code-line odd line-137">  <span class="token function">initBoth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-138">  document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;keydown&quot;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-139">    <span class="token keyword">const</span> <span class="token punctuation">{</span> row<span class="token punctuation">,</span> col <span class="token punctuation">}</span> <span class="token operator">=</span> currentPoint</code>
<code class="code-line even line-140">    <span class="token keyword">const</span> currentCell <span class="token operator">=</span> gridWalls<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span></code>
<code class="code-line odd line-141">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-142">      <span class="token keyword">case</span> <span class="token number">37</span><span class="token operator">:</span></code>
<code class="code-line odd line-143">        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCell<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-144">          currentPoint<span class="token punctuation">.</span>row<span class="token operator">--</span></code>
<code class="code-line odd line-145">        <span class="token punctuation">}</span></code>
<code class="code-line even line-146">        <span class="token keyword">break</span></code>
<code class="code-line odd line-147">      <span class="token keyword">case</span> <span class="token number">38</span><span class="token operator">:</span></code>
<code class="code-line even line-148">        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCell<span class="token punctuation">.</span>up<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-149">          currentPoint<span class="token punctuation">.</span>col<span class="token operator">--</span></code>
<code class="code-line even line-150">        <span class="token punctuation">}</span></code>
<code class="code-line odd line-151">        <span class="token keyword">break</span></code>
<code class="code-line even line-152">      <span class="token keyword">case</span> <span class="token number">39</span><span class="token operator">:</span></code>
<code class="code-line odd line-153">        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCell<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-154">          currentPoint<span class="token punctuation">.</span>row<span class="token operator">++</span></code>
<code class="code-line odd line-155">        <span class="token punctuation">}</span></code>
<code class="code-line even line-156">        <span class="token keyword">break</span></code>
<code class="code-line odd line-157">      <span class="token keyword">case</span> <span class="token number">40</span><span class="token operator">:</span></code>
<code class="code-line even line-158">        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCell<span class="token punctuation">.</span>down<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-159">          currentPoint<span class="token punctuation">.</span>col<span class="token operator">++</span></code>
<code class="code-line even line-160">        <span class="token punctuation">}</span></code>
<code class="code-line odd line-161">        <span class="token keyword">break</span></code>
<code class="code-line even line-162">      <span class="token keyword">default</span><span class="token operator">:</span></code>
<code class="code-line odd line-163">        <span class="token keyword">return</span></code>
<code class="code-line even line-164">    <span class="token punctuation">}</span></code>
<code class="code-line odd line-165">    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPoint<span class="token punctuation">.</span>row <span class="token operator">===</span> endPoint<span class="token punctuation">.</span>row <span class="token operator">&amp;&amp;</span> currentPoint<span class="token punctuation">.</span>col <span class="token operator">===</span> endPoint<span class="token punctuation">.</span>col<span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line even line-166">      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;You win !&quot;</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-167">      <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-168">      <span class="token keyword">return</span></code>
<code class="code-line odd line-169">    <span class="token punctuation">}</span></code>
<code class="code-line even line-170">    <span class="token function">initBoth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line odd line-171">  <span class="token punctuation">}</span><span class="token punctuation">)</span></code>
<code class="code-line even line-172"><span class="token punctuation">}</span></code>
<code class="code-line odd line-173"></code>
<code class="code-line even line-174"><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></code>
<code class="code-line odd line-175">  <span class="token keyword">const</span> gridWalls <span class="token operator">=</span> <span class="token function">initMaze</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code>
<code class="code-line even line-176">  <span class="token function">drawMaze</span><span class="token punctuation">(</span>gridWalls<span class="token punctuation">)</span></code>
<code class="code-line odd line-177">  <span class="token function">drawControl</span><span class="token punctuation">(</span>gridWalls<span class="token punctuation">)</span></code>
<code class="code-line even line-178"><span class="token punctuation">}</span></code>
<code class="code-line odd line-179"></code>
<code class="code-line even line-180"></code>
<code class="code-line odd last-row line-181">window<span class="token punctuation">.</span>onload <span class="token operator">=</span> init</code></pre></div></div><p>\u6548\u679C\uFF1A</p><p>\u{1F449}<a href="/resources/Maze_disjointSet/index.html">\u70B9\u51FB\u9884\u89C8</a></p>`,9),c=[p],k={title:null,tags:["maze","\u751F\u6210\u8FF7\u5BAB","disjointSet"],categories:null,description:"\u5E76\u67E5\u96C6\u5B9E\u73B0\uFF0C\u4EE5\u53CA\u5982\u4F55\u7528\u5E76\u67E5\u96C6\u751F\u6210\u8FF7\u5BAB",publishTime:"2022-10-01T03:11:24.000Z",updateTime:null,img:null,toc:!1,comment:!0,publish:!0},r="",v=s({__name:"index",setup(l,{expose:n}){return n({frontmatter:{title:null,tags:["maze","\u751F\u6210\u8FF7\u5BAB","disjointSet"],categories:null,description:"\u5E76\u67E5\u96C6\u5B9E\u73B0\uFF0C\u4EE5\u53CA\u5982\u4F55\u7528\u5E76\u67E5\u96C6\u751F\u6210\u8FF7\u5BAB",publishTime:"2022-10-01T03:11:24.000Z",updateTime:null,img:null,toc:!1,comment:!0,publish:!0},excerpt:void 0}),(i,u)=>(a(),e("div",t,c))}});export{v as default,r as excerpt,k as frontmatter};
